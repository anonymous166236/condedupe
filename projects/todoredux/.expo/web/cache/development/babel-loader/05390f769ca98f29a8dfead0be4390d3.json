{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useSelector } from \"react-redux\";\nimport { deleteTask } from \"../redux/taskSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TodoList = function TodoList() {\n  var dispatch = useDispatch();\n  var todos = useSelector(function (state) {\n    return state.tasks;\n  });\n  var data = [{\n    id: 1,\n    title: \"Learn React Native\"\n  }, {\n    id: 2,\n    title: \"Learn Redux Toolkit\"\n  }];\n\n  var onDelete = function onDelete(id) {\n    dispatch(deleteTask({\n      id: id\n    }));\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: item.name\n      }), _jsx(TouchableOpacity, {\n        style: styles.deleteButton,\n        onPress: function onPress() {\n          return onDelete(item.id);\n        },\n        children: _jsx(Ionicons, {\n          name: \"trash\",\n          size: 30,\n          color: \"red\"\n        })\n      })]\n    });\n  };\n\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: todos,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })\n  });\n};\n\nexport default TodoList;\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"#e9e9e9\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 20\n  },\n  delete: {\n    fontSize: 24,\n    color: \"red\"\n  }\n});","map":{"version":3,"names":["React","Ionicons","useSelector","deleteTask","useDispatch","TodoList","dispatch","todos","state","tasks","data","id","title","onDelete","renderItem","item","styles","name","deleteButton","StyleSheet","create","backgroundColor","padding","marginVertical","marginHorizontal","flexDirection","justifyContent","alignItems","fontSize","delete","color"],"sources":["C:/Users/mlab/Documents/React-Native-redux-toolkit-todo-app/Todo-app/src/components/TodoList.js"],"sourcesContent":["import {\n  StyleSheet,\n  Text,\n  View,\n  FlatList,\n  TouchableOpacity,\n} from \"react-native\";\nimport React from \"react\";\n//Ionicons\nimport { Ionicons } from \"@expo/vector-icons\";\n//import useSelector from \"react-redux\";lea\nimport { useSelector } from \"react-redux\";\nimport { deleteTask } from \"../redux/taskSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst TodoList = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector((state) => state.tasks);\n  // console.log(todos);\n  const data = [\n    {\n      id: 1,\n      title: \"Learn React Native\",\n    },\n    {\n      id: 2,\n      title: \"Learn Redux Toolkit\",\n    },\n  ];\n\n  //delete item by checking if id is equal to the id of the item\n  const onDelete = (id) => {\n    dispatch(\n      deleteTask({\n        id: id,\n      })\n    );\n  };\n\n  //renderItem function with a delete button\n  const renderItem = ({ item }) => {\n    return (\n      <View style={styles.item}>\n        <Text style={styles.title}>{item.name}</Text>\n        <TouchableOpacity\n          style={styles.deleteButton}\n          onPress={() => onDelete(item.id)}\n        >\n          <Ionicons name=\"trash\" size={30} color=\"red\" />\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      <FlatList\n        data={todos}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n      />\n    </View>\n  );\n};\n\nexport default TodoList;\n\nconst styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"#e9e9e9\",\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  title: {\n    fontSize: 20,\n  },\n  delete: {\n    fontSize: 24,\n    color: \"red\",\n  },\n});\n"],"mappings":";;;;;AAOA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACrB,IAAMC,QAAQ,GAAGF,WAAW,EAA5B;EACA,IAAMG,KAAK,GAAGL,WAAW,CAAC,UAACM,KAAD;IAAA,OAAWA,KAAK,CAACC,KAAjB;EAAA,CAAD,CAAzB;EAEA,IAAMC,IAAI,GAAG,CACX;IACEC,EAAE,EAAE,CADN;IAEEC,KAAK,EAAE;EAFT,CADW,EAKX;IACED,EAAE,EAAE,CADN;IAEEC,KAAK,EAAE;EAFT,CALW,CAAb;;EAYA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACF,EAAD,EAAQ;IACvBL,QAAQ,CACNH,UAAU,CAAC;MACTQ,EAAE,EAAEA;IADK,CAAD,CADJ,CAAR;EAKD,CAND;;EASA,IAAMG,UAAU,GAAG,SAAbA,UAAa,OAAc;IAAA,IAAXC,IAAW,QAAXA,IAAW;IAC/B,OACE,MAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACD,IAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEC,MAAM,CAACJ,KAApB;QAAA,UAA4BG,IAAI,CAACE;MAAjC,EADF,EAEE,KAAC,gBAAD;QACE,KAAK,EAAED,MAAM,CAACE,YADhB;QAEE,OAAO,EAAE;UAAA,OAAML,QAAQ,CAACE,IAAI,CAACJ,EAAN,CAAd;QAAA,CAFX;QAAA,UAIE,KAAC,QAAD;UAAU,IAAI,EAAC,OAAf;UAAuB,IAAI,EAAE,EAA7B;UAAiC,KAAK,EAAC;QAAvC;MAJF,EAFF;IAAA,EADF;EAWD,CAZD;;EAcA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,QAAD;MACE,IAAI,EAAEJ,KADR;MAEE,UAAU,EAAEO,UAFd;MAGE,YAAY,EAAE,sBAACC,IAAD;QAAA,OAAUA,IAAI,CAACJ,EAAf;MAAA;IAHhB;EADF,EADF;AASD,CAhDD;;AAkDA,eAAeN,QAAf;AAEA,IAAMW,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BL,IAAI,EAAE;IACJM,eAAe,EAAE,SADb;IAEJC,OAAO,EAAE,EAFL;IAGJC,cAAc,EAAE,CAHZ;IAIJC,gBAAgB,EAAE,EAJd;IAKJC,aAAa,EAAE,KALX;IAMJC,cAAc,EAAE,eANZ;IAOJC,UAAU,EAAE;EAPR,CADyB;EAU/Bf,KAAK,EAAE;IACLgB,QAAQ,EAAE;EADL,CAVwB;EAa/BC,MAAM,EAAE;IACND,QAAQ,EAAE,EADJ;IAENE,KAAK,EAAE;EAFD;AAbuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}